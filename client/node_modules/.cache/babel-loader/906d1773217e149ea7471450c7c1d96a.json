{"ast":null,"code":"const GmapsService = {\n  getRoute(office, waypoints) {\n    const url = buildURL(office, waypoints);\n    return fetch(url, {\n      method: 'GET'\n    }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json());\n  }\n\n};\n\nconst buildURL = (office, waypoints) => {\n  const base = 'https://maps.googleapis.com/maps/api/directions/json?';\n  const API_KEY = 'key=AIzaSyD8WOPebraRVboH1p_HHjplx3-BQVP31hw';\n  const units = 'units=imperial';\n  const origin = `origin=optimize:true|${formatAddress(office)}`;\n  const destination = `destination=${origin}`;\n  const wps = `waypoints=optimize:true|${waypoints.map(waypoint => {\n    return formatAddress(waypoint);\n  })}`;\n  return `${base}${units}&${origin}&${wps}&${destination}&${API_KEY}`;\n};\n\nconst formatAddress = address => {\n  return address.replace(/ /g, \"+\");\n};\n\nexport default GmapsService;","map":{"version":3,"sources":["/Users/DreamMachine/Documents/Development/pcc/src/Services/gmaps-service.js"],"names":["GmapsService","getRoute","office","waypoints","url","buildURL","fetch","method","then","res","ok","json","e","Promise","reject","base","API_KEY","units","origin","formatAddress","destination","wps","map","waypoint","address","replace"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,CAACC,MAAD,EAASC,SAAT,EAAoB;AAC1B,UAAMC,GAAG,GAAGC,QAAQ,CAACH,MAAD,EAASC,SAAT,CAApB;AAEA,WAAOG,KAAK,CAACF,GAAD,EAAM;AAChBG,MAAAA,MAAM,EAAE;AADQ,KAAN,CAAL,CAGJC,IAHI,CAGCC,GAAG,IACN,CAACA,GAAG,CAACC,EAAN,GACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAArB,CADJ,GAEIH,GAAG,CAACE,IAAJ,EAND,CAAP;AAQD;;AAZkB,CAArB;;AAeA,MAAMN,QAAQ,GAAG,CAACH,MAAD,EAASC,SAAT,KAAuB;AACtC,QAAMY,IAAI,GAAG,uDAAb;AACA,QAAMC,OAAO,GAAG,6CAAhB;AACA,QAAMC,KAAK,GAAG,gBAAd;AACA,QAAMC,MAAM,GAAI,wBAAuBC,aAAa,CAACjB,MAAD,CAAS,EAA7D;AACA,QAAMkB,WAAW,GAAI,eAAcF,MAAO,EAA1C;AACA,QAAMG,GAAG,GAAI,2BAA0BlB,SAAS,CAACmB,GAAV,CAAeC,QAAD,IAAc;AACjE,WAAOJ,aAAa,CAACI,QAAD,CAApB;AACD,GAFsC,CAEpC,EAFH;AAIA,SAAQ,GAAER,IAAK,GAAEE,KAAM,IAAGC,MAAO,IAAGG,GAAI,IAAGD,WAAY,IAAGJ,OAAQ,EAAlE;AACD,CAXD;;AAcA,MAAMG,aAAa,GAAIK,OAAD,IAAa;AACjC,SAAOA,OAAO,CAACC,OAAR,CAAgB,IAAhB,EAAsB,GAAtB,CAAP;AACD,CAFD;;AAIA,eAAezB,YAAf","sourcesContent":["const GmapsService = {\n  getRoute(office, waypoints) {\n    const url = buildURL(office, waypoints);\n\n    return fetch(url, {\n      method: 'GET',\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      );\n  }\n};\n\nconst buildURL = (office, waypoints) => {\n  const base = 'https://maps.googleapis.com/maps/api/directions/json?';\n  const API_KEY = 'key=AIzaSyD8WOPebraRVboH1p_HHjplx3-BQVP31hw';\n  const units = 'units=imperial';\n  const origin = `origin=optimize:true|${formatAddress(office)}`;\n  const destination = `destination=${origin}`;\n  const wps = `waypoints=optimize:true|${waypoints.map((waypoint) => {\n    return formatAddress(waypoint);\n  })}`;\n\n  return `${base}${units}&${origin}&${wps}&${destination}&${API_KEY}`;\n};\n\n\nconst formatAddress = (address) => {\n  return address.replace(/ /g, \"+\");\n};\n\nexport default GmapsService;"]},"metadata":{},"sourceType":"module"}